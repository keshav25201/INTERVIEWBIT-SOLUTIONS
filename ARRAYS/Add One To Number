Given a non-negative number represented as an array of digits,

add 1 to the number ( increment the number represented by the digits ).

The digits are stored such that the most significant digit is at the head of the list.

Example:

If the vector has [1, 2, 3]

the returned vector should be [1, 2, 4]

as 123 + 1 = 124.

vector<int> Solution::plusOne(vector<int> &A) {
    int n = A.size();
    int c = 1;
    for(int i=n-1;i>=0;i--){
        A[i]  = A[i]+c;
        c = 0;
       if(A[i]==10){
           c = 1;
           A[i] = 0;
       }
       if(c==0)break;//if carry becomes zero there is nothing to add
    }
    if(c!=0)A.insert(A.begin(),1);//if carry is not zero insert digit
    
    int i;//removing trailing zeros at begining
    for(i=0;i<n;i++){
        if(A[i]!=0){
            break;    
        }
    }
    A.erase(A.begin(),A.begin()+i);
    return A;
}
