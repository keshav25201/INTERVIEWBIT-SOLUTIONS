Implement the next permutation, which rearranges numbers into the numerically next greater permutation of numbers for a given array A of size N.

If such arrangement is not possible, it must be rearranged as the lowest possible order i.e., sorted in an ascending order.

logic :the point from where there is decreasing sequence till end cannot be modified as it is already largest possible.the point just before the decreasing sequence 
can be replaced with the smallest number greater than it from the decreasing sequence.now we need to reverse the decresing sequence to make it just the next 
permutation

vector<int> Solution::nextPermutation(vector<int> &A) {
    int n = A.size();
    int i = n-2;
    while(i>=0 && A[i]>=A[i+1])i--;
    if(i==-1){
        reverse(A.begin(),A.end());
        return A;
    }
    reverse(A.begin()+i+1,A.end());
    for(int j=i+1;j<n;j++){
        if(A[j] > A[i]){
            swap(A[j],A[i]);
            return A;
        }
    }
}
