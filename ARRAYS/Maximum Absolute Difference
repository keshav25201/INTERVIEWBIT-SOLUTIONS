
You are given an array of N integers, A1, A2 ,…, AN. Return maximum value of f(i, j) for all 1 ≤ i, j ≤ N.
f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.

For example,

A=[1, 3, -1]

f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5

So, we return 5.

-----------------------------------------logic:
there can be 4 cases:
case 1:

A[i] > A[j] and i < j
(A[i]-i) - (A[j] - j)

case2:
A[i] > A[j] and i > j
(A[i] + i) - (A[j] + j)

case3:
A[i] < A[j] and i > j
-(A[i]-i) + (A[j] - j)

case4:
A[i] < A[j] and i < j
-(A[i] + i) + (A[j] + j)

case 1 and 3 are same
case 2 and 4 are same

we get two answers 
ans1 = max(a[i]+i) - min(a[i]+i)
ans2 = max(a[i]-i) - min(a[i]-i)

ans will be max of ans1 and ans2

int Solution::maxArr(vector<int> &A) {
    int n = A.size();
    int max1 = A[0];
    int min1 = A[0];
    int max2 = A[0];
    int min2 = A[0];
    for(int i=1;i<n;i++){
        max1 = max(max1,A[i]+i);
        min1 = min(min1,A[i]+i);
        max2 = max(max2,A[i]-i);
        min2 = min(min2,A[i]-i);
    }
      return max(max1-min1,max2-min2);
}
